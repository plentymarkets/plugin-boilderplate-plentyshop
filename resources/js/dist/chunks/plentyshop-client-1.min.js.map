{"version":3,"sources":["webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./resources/js/src/app/components/HelloWorld.vue?2e9e","webpack:///./resources/js/src/app/store/HelloWorldModule.js","webpack:///./resources/js/src/app/components/HelloWorld.vue?f215","webpack:///resources/js/src/app/components/HelloWorld.vue","webpack:///./resources/js/src/app/mixins/registerStore.js","webpack:///./resources/js/src/app/components/HelloWorld.vue"],"names":["normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","_h","$createElement","_c","_self","_v","_s","computedText","_withStripped","state","text","mutations","setHelloWorldText","newText","actions","getters","created","$store","hasModule","registerModule","HelloWorldModule","preserveState","helloWorld","component","__file"],"mappings":"0FAMe,SAASA,EACtBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBIC,EArBAC,EAAmC,mBAAlBT,EACjBA,EAAcS,QACdT,EAsDJ,GAnDIC,IACFQ,EAAQR,OAASA,EACjBQ,EAAQP,gBAAkBA,EAC1BO,EAAQC,WAAY,GAIlBP,IACFM,EAAQE,YAAa,GAInBN,IACFI,EAAQG,SAAW,UAAYP,GAI7BC,GACFE,EAAO,SAAUK,IAEfA,EACEA,GACCC,KAAKC,QAAUD,KAAKC,OAAOC,YAC3BF,KAAKG,QAAUH,KAAKG,OAAOF,QAAUD,KAAKG,OAAOF,OAAOC,aAEZ,oBAAxBE,sBACrBL,EAAUK,qBAGRd,GACFA,EAAae,KAAKL,KAAMD,GAGtBA,GAAWA,EAAQO,uBACrBP,EAAQO,sBAAsBC,IAAIf,IAKtCG,EAAQa,aAAed,GACdJ,IACTI,EAAOD,EACH,WACAH,EAAae,KACXL,MACCL,EAAQE,WAAaG,KAAKG,OAASH,MAAMS,MAAMC,SAASC,aAG3DrB,GAGFI,EACF,GAAIC,EAAQE,WAAY,CAGtBF,EAAQiB,cAAgBlB,EAExB,IAAImB,EAAiBlB,EAAQR,OAC7BQ,EAAQR,OAAS,SAAmC2B,EAAGf,GAErD,OADAL,EAAKW,KAAKN,GACHc,EAAeC,EAAGf,QAEtB,CAEL,IAAIgB,EAAWpB,EAAQqB,aACvBrB,EAAQqB,aAAeD,EACnB,GAAGE,OAAOF,EAAUrB,GACpB,CAACA,GAIT,MAAO,CACLwB,QAAShC,EACTS,QAASA,GA/Fb,mC,uCCAA,IAAIR,EAAS,WACX,IACIgC,EADMnB,KACGoB,eACTC,EAFMrB,KAEGsB,MAAMD,IAAMF,EACzB,OAAOE,EAAG,MAAO,CAACA,EAAG,IAAK,CAHhBrB,KAGqBuB,GAHrBvB,KAG4BwB,GAH5BxB,KAGmCyB,oBAG/CtC,EAAOuC,eAAgB,ECDvB,IA6Be,GACXC,MA9BU,iBAAO,CACjBC,KAAM,UA8BNC,UAzBA,CACIC,kBADJ,SACsBH,EAAOI,GAErBJ,EAAMC,KAAOG,IAuBrBC,QAjBA,GAkBAC,QAXA,CACIR,aADJ,SACiBE,GAET,MAAO,SAAWA,EAAMC,KAAO,OC/BiK,ECgB5M,CAEE,KAAF,cAGE,OAAF,CCfe,CAEXM,QAFW,WAIFlC,KAAKmC,OAAOC,UAAU,eAEvBpC,KAAKmC,OAAOE,eAAe,aAAcC,EAAkB,CAAEC,gBAAiBvC,KAAKmC,OAAOR,MAAMa,gBDY1G,MAAF,CACI,KAAJ,OACI,SAAJ,SAIE,SACF,CACI,aADJ,WAIM,OAAN,cAEA,iCAGA,0B,SEjCIC,EAAY,YACd,EACAtD,ELHoB,IKKpB,EACA,KACA,KACA,MAuBFsD,EAAU9C,QAAQ+C,OAAS,iDACZ,UAAAD,E","file":"chunks/plentyshop-client-1.min.js","sourcesContent":["/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [_c(\"p\", [_vm._v(_vm._s(_vm.computedText))])])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","/*\n    This is an example VueX store. It allows us to share state between multiple components.\n    Please refer to https://vuex.vuejs.org/ for more information.\n */\n\n// The state of the VueX store.\nconst state = () => ({\n    text: \"World\"\n});\n\n// Mutations can change the state\nconst mutations =\n    {\n        setHelloWorldText(state, newText)\n        {\n            state.text = newText;\n        }\n    };\n\n// Actions are potentially asynchronous functions (REST calls for example)\nconst actions =\n    {\n        // We have no need for any actions in this store, so we leave this empty.\n        // You can also omit the actions variable in your module, if you don't need it.\n    };\n\n// Getters behave similar to computed properties of components\nconst getters =\n    {\n        computedText(state)\n        {\n            return \"Hello \" + state.text + \"!\"\n        }\n    };\n\nexport default {\n    state,\n    mutations,\n    actions,\n    getters\n};\n","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=js&\"","<template>\n    <div>\n        <p>{{ computedText }}</p>\n    </div>\n</template>\n\n<script>\n/*\n    This is a Hello World component for demonstration purposes.\n    Take a look at HelloWorldWidget.twig to see, how it is used in the DOM.\n    It is also used to showcase the VueX store - when the useStore prop is true, the text prop is ignored and the text\n    is fetched from the store. The text in the store can be modified via the WhoToGreet.vue component.\n    For more information about Single File Components, please refer to https://vuejs.org/v2/guide/single-file-components.html\n */\nimport registerStore from \"../mixins/registerStore\";\n\nexport default {\n    // The name of the component\n    name: \"hello-world\",\n\n    // The mixin is used to register our VueX store\n    mixins: [registerStore],\n\n    // Props are input parameters for the component\n    props: {\n        text: String,\n        useStore: Boolean\n    },\n\n    // Computed properties automatically update, when one of it's constituents changes.\n    computed:\n    {\n        computedText()\n        {\n            // Fetch the computedText from the VueX Store\n            if(this.useStore)\n            {\n                return this.$store.getters['computedText'];\n            }\n\n            return \"Hello \" + this.text + \"!\";\n        }\n    }\n}\n</script>\n","import HelloWorldModule from '../store/HelloWorldModule'\n\n/*\n    This is a mixin used to register our VueX module into the VueX store.\n    A mixin is a way to reuse code by \"mixing it in\" into a component.\n */\nexport default {\n    // The mixins created lifecycle runs before the component lifecycle.\n    created () {\n        // We check if the module is not yet registered\n        if (!this.$store.hasModule('helloWorld')) {\n            // preserveState is used for literally preserving the already existing state\n            this.$store.registerModule('helloWorld', HelloWorldModule, { preserveState: !!this.$store.state.helloWorld })\n        }\n    }\n}\n","import { render, staticRenderFns } from \"./HelloWorld.vue?vue&type=template&id=367f719c&\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=js&\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/felixgehrmann/workspace/localsystem/plugins/inbox/set_plugins/1/PlentyShop/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('367f719c')) {\n      api.createRecord('367f719c', component.options)\n    } else {\n      api.reload('367f719c', component.options)\n    }\n    module.hot.accept(\"./HelloWorld.vue?vue&type=template&id=367f719c&\", function () {\n      api.rerender('367f719c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/HelloWorld.vue\"\nexport default component.exports"],"sourceRoot":""}